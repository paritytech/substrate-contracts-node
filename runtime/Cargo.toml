[package]
name = "contracts-node-runtime"
version.workspace = true
authors.workspace = true
edition.workspace = true
description = "Runtime configured for smart contracts via `pallet-contracts` and `pallet-revive`."
license.workspace = true
homepage.workspace = true
repository.workspace = true
build = "build.rs"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
codec = { features = ["derive"], workspace = true }
scale-info = { workspace = true }

frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
frame-try-runtime = { workspace = true, optional = true }
pallet-aura = { workspace = true }
pallet-balances = { workspace = true }
pallet-grandpa = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-consensus-grandpa = { workspace = true }
sp-core = { workspace = true }
sp-genesis-builder = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-storage = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }

# Polkadot
polkadot-runtime-common = { workspace = true }

# extra deps for setting up pallet-contracts and pallet-revive
pallet-assets = { workspace = true }
pallet-authorship = { workspace = true }
pallet-insecure-randomness-collective-flip = { workspace = true }
pallet-revive = { workspace = true }
pallet-contracts = { workspace = true }
pallet-utility = { workspace = true }

# Used for runtime benchmarking
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true }

[features]
default = ["std"]
std = [
  "codec/std",
  "frame-benchmarking?/std",
  "frame-executive/std",
  "frame-support/std",
  "frame-system-benchmarking?/std",
  "frame-system-rpc-runtime-api/std",
  "frame-system/std",
  "frame-try-runtime?/std",
  "pallet-assets/std",
  "pallet-aura/std",
  "pallet-authorship/std",
  "pallet-balances/std",
  "pallet-grandpa/std",
  "pallet-insecure-randomness-collective-flip/std",
  "pallet-revive/std",
  "pallet-contracts/std",
  "pallet-sudo/std",
  "pallet-timestamp/std",
  "pallet-transaction-payment-rpc-runtime-api/std",
  "pallet-transaction-payment/std",
  "scale-info/std",
  "sp-api/std",
  "sp-block-builder/std",
  "sp-consensus-aura/std",
  "sp-consensus-grandpa/std",
  "sp-core/std",
  "sp-genesis-builder/std",
  "sp-inherents/std",
  "sp-offchain/std",
  "sp-runtime/std",
  "sp-session/std",
  "sp-storage/std",
  "sp-transaction-pool/std",
  "sp-version/std",
  "polkadot-runtime-common/std",
  "substrate-wasm-builder",
]
runtime-benchmarks = [
  "frame-benchmarking/runtime-benchmarks",
  "frame-support/runtime-benchmarks",
  "frame-system-benchmarking/runtime-benchmarks",
  "frame-system/runtime-benchmarks",
  "pallet-balances/runtime-benchmarks",
  "pallet-grandpa/runtime-benchmarks",
  "pallet-sudo/runtime-benchmarks",
  "pallet-timestamp/runtime-benchmarks",
  "pallet-assets/runtime-benchmarks",
  "sp-runtime/runtime-benchmarks",
]
try-runtime = [
  "frame-executive/try-runtime",
  "frame-support/try-runtime",
  "frame-system/try-runtime",
  "frame-try-runtime/try-runtime",
  "pallet-assets/try-runtime",
  "pallet-aura/try-runtime",
  "pallet-balances/try-runtime",
  "pallet-grandpa/try-runtime",
  "pallet-sudo/try-runtime",
  "pallet-timestamp/try-runtime",
  "pallet-transaction-payment/try-runtime",
  "pallet-revive/try-runtime",
  "pallet-contracts/try-runtime",
  "sp-runtime/try-runtime",
]
parachain = []
